{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"vert",
				"vertices"
			],
			[
				"attrbu",
				"attribute"
			],
			[
				"mesh",
				"mesh_matrix"
			],
			[
				"acti",
				"active_window"
			],
			[
				"active",
				"active_view"
			],
			[
				"su",
				"sublimeplugin"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main.odin",
			"settings":
			{
				"buffer_size": 42809,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/obj.odin",
			"settings":
			{
				"buffer_size": 5455,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/shaders/shader.frag",
			"settings":
			{
				"buffer_size": 151,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/shaders/shader.vert",
			"settings":
			{
				"buffer_size": 387,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/math.odin",
			"settings":
			{
				"buffer_size": 411,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/renderer.odin",
			"settings":
			{
				"buffer_size": 428,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "package obj\n\nimport        \"core:os\"\nimport str    \"core:strings\"\nimport        \"core:strconv\"\nimport        \"core:src\"\n\nFileInfo :: struct {\n    vertex_count: u32,\n    face_count: u32,\n    normal_count: u32,\n    uv_count: u32,\n}\n\nReader :: struct {\n    s: string,\n    i: u64,\n}\n\nFace :: struct {\n    position_indices: [3]u64,\n    normal_indices  : [3]u64,\n    uv_indices      : [3]u64,\n}\n\nread:: proc(file_name: string) -> (mesh: Mesh) {\n    using math;\n    \n    buf, ok := os.read_entire_file(file_name, context.temp_allocator);\n    assert(ok);\n    info := get_info(buf);\n    \n    mesh.vertices = make_dynamic_array_len([dynamic]Vertex, info.face_count * 3);\n    mesh.indices  = make_dynamic_array_len([dynamic]u32, info.face_count * 3);\n    \n    obj_positions := make_dynamic_array_len([dynamic]vec3, info.vertex_count, context.temp_allocator);\n    obj_normals   := make_dynamic_array_len([dynamic]vec3, info.normal_count, context.temp_allocator);\n    obj_uvs       := make_dynamic_array_len([dynamic]vec2, info.uv_count,     context.temp_allocator);\n    index_map     := make_map(map[ivec3]u32, info.face_count, context.temp_allocator);\n    \n    \n    reader := create_reader(string(buf));\n    \n    for ;; {\n        word, eof  := next_word(&reader);\n        switch word {\n            case \"v\": {\n                v: vec3;\n                v, eof = next_vec(&reader, vec3);\n                append_elem(&obj_positions, v);\n            }\n            case \"vn\": {\n                v: vec3;\n                v, eof = next_vec(&reader, vec3);\n                append_elem(&obj_normals, v);\n            }\n            case \"vt\": {\n                v: vec2;\n                v, eof = next_vec(&reader, vec2);\n                append_elem(&obj_uvs, v);\n            }\n            case \"f\": {\n                face: Face;\n                face, eof = parse_face(&reader);\n                \n                for i in 0..2 {\n                    key: ivec3 = {\n                        i32(face.position_indices[i]),\n                        i32(face.normal_indices[i]),\n                        i32(face.uv_indices[i]),\n                    };\n                    \n                    index, ok := index_map[key];\n                    \n                    if (!ok) {\n                        index = u32(len(mesh.vertices));\n                        index_map[key] = index;\n                        \n                        vertex: Vertex;\n                        vertex.pos = obj_positions[face.position_indices[i]];\n                        vertex.normal = obj_normals[face.normal_indices[i]]; \n                        vertex.uv = obj_uvs[face.uv_indices[i]];\n                        vertex.color = {1,1,1};\n                        \n                        append_elem(&mesh.vertices, vertex);\n                    }\n                    append_elem(&mesh.indices, index);\n                    \n                    \n                }\n            }\n        }\n        \n        if eof {\n            break;\n        }\n    }\n    \n    return mesh;\n}\n\nis_whitespace:: proc(c: u8) -> b32 {\n    return (c == ' ' ||\n            c == '\\n');\n}\n\nincrement_reader:: proc(r: ^Reader) -> b32 {\n    if r.i < u64(len(r.s)) - 1 {\n        r.i += 1;\n        return true;\n    }\n    return false;\n}\n\nnext_word:: proc(r: ^Reader) -> (str: string, eof: bool) {\n    // Skip whitespace\n    eof = false;\n    for ;is_whitespace(r.s[r.i]); {\n        if !increment_reader(r) {\n            eof = true;\n            break;\n        }\n    }\n    \n    start := r.i;\n    \n    for ;!is_whitespace(r.s[r.i]); {\n        if !increment_reader(r) {\n            eof = true;\n            break;\n        }\n    }\n    str = r.s[start:r.i];\n    \n    return str, eof;\n}\n\n\ncreate_reader:: proc(s: string) -> (r: Reader) {\n    r.s = s;\n    return;\n}\n\nget_info:: proc(buf: []byte) -> (info: FileInfo) {\n    \n    reader := create_reader(string(buf));\n    for ;; {\n        word, eof := next_word(&reader);\n        \n        switch word {\n            case \"v\":\n                info.vertex_count += 1;\n            case \"vn\":\n                info.normal_count += 1;\n            case \"vt\":\n                info.uv_count     += 1;\n            case \"f\":\n                info.face_count   += 1;\n        }\n        \n        if eof {\n            break;\n        }\n    }\n    \n    return info;\n}\n\nnext_float:: proc(r: ^Reader) -> (f: f32, eof: bool) {\n    s: string;\n    s, eof = next_word(r);\n    ok: bool;\n    f, ok = strconv.parse_f32(s);\n    assert(ok);\n    \n    return f, eof;\n}\n\nnext_vec:: proc(r: ^Reader, $T: typeid) -> (v: T, eof: bool) {\n    for i in 0..<(size_of(T)/size_of(f32)) {\n        v[i], eof = next_float(r);\n    }\n    return v, eof;\n}\n\nparse_face:: proc(r: ^Reader) -> (face: Face, eof: bool) {\n    \n    for i in 0..2 {\n        word: string;\n        word, eof = next_word(r);\n        split := str.split(word, \"/\", context.temp_allocator);\n        assert(len(split) == 3);\n        \n        //NOTE(mb): we subtract -1 because .obj file is indexed from 1\n        // Face = position/texture/normal * 3\n        ok: bool;\n        face.position_indices[i], ok = strconv.parse_u64(split[0]);\n        face.uv_indices[i], ok       = strconv.parse_u64(split[1]);\n        face.normal_indices[i], ok   = strconv.parse_u64(split[2]);   \n        \n        face.position_indices[i] -= 1;\n        face.uv_indices[i]       -= 1;\n        face.normal_indices[i]   -= 1;\n        \n    }\n    \n    return face, eof;\n}\n",
			"file": "src/obj/obj.odin",
			"file_size": 5407,
			"file_write_time": 132805120769306176,
			"settings":
			{
				"buffer_size": 5407,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 3,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": ".vs"
			}
		},
		{
			"file": "project.sublime-project",
			"settings":
			{
				"buffer_size": 278,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/build.bat",
			"settings":
			{
				"buffer_size": 418,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				":we",
				":w - Save"
			],
			[
				":wa",
				":w - Save"
			],
			[
				":key",
				"Preferences: Key Bindings"
			],
			[
				":synta",
				"Preferences: Settings â€“ Syntax Specific"
			],
			[
				":ke",
				"Preferences: Key Bindings"
			],
			[
				":packa",
				"Preferences: Browse Packages"
			],
			[
				":menu",
				"View: Toggle Menu"
			],
			[
				":setting",
				"Preferences: Settings"
			],
			[
				":lsp se",
				"Preferences: LSP Settings"
			],
			[
				":packa ins",
				"Package Control: Install Package"
			],
			[
				":install p",
				"Package Control: Install Package"
			],
			[
				":lsp",
				"LSP: Disable Language Server in Project"
			],
			[
				":aw",
				":w - Save"
			],
			[
				":a",
				"Help: About"
			],
			[
				":diagno",
				"LSP: Toggle Diagnostics Panel"
			],
			[
				":lSP",
				"Preferences: LSP Settings"
			],
			[
				":packages",
				"Preferences: Browse Packages"
			],
			[
				":LSP",
				"Preferences: LSP Settings"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"package control: install",
				"Package Control: Install Package"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 369.0,
		"history":
		[
			"clear",
			"view.run_command(\"switch_window\")",
			"view.runCommand(\"switch_window\")",
			"build.bat",
			"view.run_command(\"SwitchWindow\")",
			"print(\"test\")",
			"view.run_command(\"SwitchWindow\")",
			"view.run_command(\"example\")",
			"view.run_command(\"example);",
			"view.run_command(\"example)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/W/odin_project/src"
	],
	"file_history":
	[
		"/C/Users/Marko/AppData/Roaming/Sublime Text 3/Packages/User/panel_switch.py",
		"/C/W/odin_project/src/types.odin",
		"/C/W/odin_project/src/obj.odin",
		"/C/W/odin_project/build.bat",
		"/C/W/odin_project/main.odin",
		"/C/W/odin_project/n.odin",
		"/C/W/odin_project/",
		"/C/W/odin_project/src/read_obj.odin",
		"/C/W/odin_project/src/main.odin",
		"/C/W/odin_project/project.sublime-project",
		"/C/W/odin_project/src/renderer/renderer.odin",
		"/C/W/odin_project/frag.spv",
		"/C/W/odin_project/src/build.bat",
		"/C/W/odin_project/project.4coder",
		"/C/Users/Marko/AppData/Roaming/Sublime Text/Packages/User/panel_switch.py",
		"/C/Users/Marko/AppData/Roaming/Sublime Text/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Marko/AppData/Roaming/Sublime Text/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/Marko/AppData/Roaming/Sublime Text/Packages/LSP/Default.sublime-keymap",
		"/C/W/odin_project/ols.json",
		"/C/Program Files/Odin LSP/ols/ols.json"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"create_vuff",
			"array",
			"memoryRe",
			"aligment",
			"next_",
			"color",
			"create_bu",
			"UIN32",
			"get_vertex",
			"make",
			"amek",
			"swap_chain_image_vi",
			"make",
			"                                             ",
			"triangle_mes",
			"create_buffer",
			"mesh.vertices",
			"create_buffer",
			".SRC",
			"TRANSFER",
			"create_vert",
			"obj_read",
			"create_vertex_buffer",
			"tan",
			"color",
			"/Layout",
			"find_queue_",
			"matrix",
			"r.",
			"/",
			"\\"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42809,
						"regions":
						{
						},
						"selection":
						[
							[
								31341,
								31341
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 15892.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/obj.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5455,
						"regions":
						{
						},
						"selection":
						[
							[
								2726,
								2726
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1137.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/shaders/shader.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 151,
						"regions":
						{
						},
						"selection":
						[
							[
								13,
								13
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/shaders/shader.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 387,
						"regions":
						{
						},
						"selection":
						[
							[
								337,
								337
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/math.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 411,
						"regions":
						{
						},
						"selection":
						[
							[
								411,
								411
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/renderer.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 428,
						"regions":
						{
						},
						"selection":
						[
							[
								212,
								212
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/obj/obj.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5407,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42809,
						"regions":
						{
						},
						"selection":
						[
							[
								37775,
								37775
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18834.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3,
						"regions":
						{
						},
						"selection":
						[
							[
								3,
								3
							]
						],
						"settings":
						{
							"auto_name": ".vs",
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/obj.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5455,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/shaders/shader.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 151,
						"regions":
						{
						},
						"selection":
						[
							[
								98,
								98
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/shaders/shader.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 387,
						"regions":
						{
						},
						"selection":
						[
							[
								245,
								245
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "project.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 278,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								122
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/build.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 418,
						"regions":
						{
						},
						"selection":
						[
							[
								418,
								418
							]
						],
						"settings":
						{
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/renderer.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 428,
						"regions":
						{
						},
						"selection":
						[
							[
								154,
								154
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/math.odin",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 411,
						"regions":
						{
						},
						"selection":
						[
							[
								411,
								411
							]
						],
						"settings":
						{
							"lsp_active": true,
							"lsp_language":
							{
								"odin": "odin"
							},
							"show_definitions": false,
							"syntax": "Packages/sublime-odin/Odin.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.diagnostics":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 290.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "project.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ma",
				"main.odin"
			],
			[
				"o",
				"obj.odin"
			],
			[
				"main",
				"main.odin"
			],
			[
				"obj",
				"obj.odin"
			],
			[
				"re",
				"renderer.odin"
			],
			[
				"obn",
				"obj.odin"
			],
			[
				"sha",
				"shaders\\shader.vert"
			],
			[
				"mat",
				"math.odin"
			],
			[
				"",
				"shaders\\shader.frag"
			],
			[
				"ty",
				"types.odin"
			],
			[
				"ob",
				"obj\\obj.odin"
			],
			[
				"ren",
				"renderer.odin"
			],
			[
				"rea",
				"read_obj.odin"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": false,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
